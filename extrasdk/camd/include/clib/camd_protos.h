/* Automatically generated header (sfdc 1.11d)! Do not edit! */

#ifndef CLIB_CAMD_PROTOS_H
#define CLIB_CAMD_PROTOS_H

/*
**   $VER: camd_protos.h  
**
**   C prototypes. For use with 32 bit integers only.
**
**   Copyright (c) 2001 Amiga, Inc.
**       All Rights Reserved
*/

#include <exec/types.h>
#include <midi/camd.h>
#include <utility/tagitem.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/* This SFD file was automatically generated by fd2sfd from */
/* camd_lib.fd and */
/* camd_protos.h. */
/* "camd.library" */
/*
 --------------------- Locks
*/

APTR LockCAMD(ULONG locktype);
void UnlockCAMD(APTR lock);

/* --------------------- MidiNode */

struct MidiNode * CreateMidiA(struct TagItem * name);
void DeleteMidi(struct MidiNode * mi);
BOOL SetMidiAttrsA(struct MidiNode * mi, struct TagItem * tags);
BOOL SetMidiAttrs(struct MidiNode * mi, Tag tags, ...);
ULONG GetMidiAttrsA(struct MidiNode * mi, struct TagItem * tags);
ULONG GetMidiAttrs(struct MidiNode * mi, Tag tags, ...);
struct MidiNode * NextMidi(struct MidiNode * mi);
struct MidiNode * FindMidi(STRPTR name);
void FlushMidi(struct MidiNode * mi);

/* --------------------- MidiLink */

struct MidiLink * AddMidiLinkA(struct MidiNode * mi, LONG type, struct TagItem * tags);
struct MidiLink * AddMidiLink(struct MidiNode * mi, LONG type, Tag tags, ...);
void RemoveMidiLink(struct MidiLink * ml);
BOOL SetMidiLinkAttrsA(struct MidiLink * ml, struct TagItem * tags);
BOOL SetMidiLinkAttrs(struct MidiLink * ml, Tag tags, ...);
ULONG GetMidiLinkAttrsA(struct MidiLink * ml, struct TagItem * tags);
ULONG GetMidiLinkAttrs(struct MidiLink * ml, Tag tags, ...);
struct MidiLink * NextClusterLink(struct MidiCluster * mc, struct MidiLink * ml, LONG type);
struct MidiLink * NextMidiLink(struct MidiNode * mi, struct MidiLink * ml, LONG type);
BOOL MidiLinkConnected(struct MidiLink * ml);

/* --------------------- MidiCluster */

struct MidiCluster * NextCluster(struct MidiCluster * mc);
struct MidiCluster * FindCluster(STRPTR name);

/* --------------------- Message */

void PutMidi(struct MidiLink * ml, LONG msgdata);
BOOL GetMidi(struct MidiNode * mi, MidiMsg * msg);
BOOL WaitMidi(struct MidiNode * mi, MidiMsg * msg);
void PutSysEx(struct MidiLink * ml, UBYTE * buffer);
ULONG GetSysEx(struct MidiNode * mi, UBYTE * buffer, ULONG len);
ULONG QuerySysEx(struct MidiNode * mi);
void SkipSysEx(struct MidiNode * mi);
UBYTE GetMidiErr(struct MidiNode * mi);
WORD MidiMsgType(MidiMsg * msg);
WORD MidiMsgLen(ULONG status);
void ParseMidi(struct MidiLink * ml, UBYTE * buffer, ULONG length);

/* --------------------- Device */

struct MidiDeviceData * OpenMidiDevice(UBYTE * name);
void CloseMidiDevice(struct MidiDeviceData * mdd);

/* --------------------- External functions */

int RethinkCAMD(void);
void StartClusterNotify(struct ClusterNotifyNode * node);
void EndClusterNotify(struct ClusterNotifyNode * node);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CLIB_CAMD_PROTOS_H */
